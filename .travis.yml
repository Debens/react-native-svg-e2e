aliases:
  - &android
    components:
      - build-tools-26.0.2
      - android-24
      - extra-android-m2repository
      - extra-google-google_play_services
      - extra-google-m2repository
      - sys-img-x86-google_apis-24

  - &android-cache
    directories:
      - ~/.cache/yarn
      - ~/.gradle/caches/modules-2
      - ~/.gradle/wrapper

  - &ios-cache
    directories:
      - ~/.rncache
      - ~/Library/Caches/Yarn
      - ~/Library/Caches/CocoaPods

  - &init-new-project
    |
      nvm install node
      nvm alias default node
      yarn global add react-native-cli
      react-native init App --version="0.58.6"
      cd App
      yarn add react-native-svg

jobs:
  include:
    - stage: "test js"
      language: node_js
      node_js: node
      cache: yarn
      script:
        - node node_modules/react-native/local-cli/cli.js bundle --entry-file index.js --bundle-output bundle.js
        - ls -lh bundle.*

    - stage: "build test for example"
      language: android
      jdk: oraclejdk8
      android: *android
      before_cache:
        - rm ~/.gradle/caches/modules-2/modules-2.lock
      cache: *android-cache
      before_install:
        # Install SDK license so Android Gradle plugin can install deps.
        - mkdir "$ANDROID_HOME/licenses" || true
        - echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > "$ANDROID_HOME/licenses/android-sdk-license"
        - echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> "$ANDROID_HOME/licenses/android-sdk-license"
        # Install the rest of tools (e.g., avdmanager)
        - sdkmanager tools
        # Install the system image
        - sdkmanager "system-images;android-24;google_apis;x86"
      script:
        # Create and start emulator for the script. Meant to race the install task.
        - echo no | avdmanager create avd --force -n test -k "system-images;android-24;google_apis;x86"
        - $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window &
        - nvm install node
        - yarn global add react-native-cli
        - yarn global add detox-cli
        - yarn
        - detox build --configuration android.emu.release
        - android-wait-for-emulator
        - adb shell input keyevent 82 &
        - cat /home/travis/.android/avd/test.avd/config.ini
        - detox test --configuration android.emu.release --cleanup --take-screenshots all
        - ls -lh app/build/outputs/apk

    - stage: "build test for example"
      language: objective-c
      osx_image: xcode10.1
      cache: *ios-cache
      before_install:
      script:
        - nvm install node
        - nvm alias default node
        - brew tap wix/brew
        - brew install yarn
        - brew install applesimutils
        - yarn global add react-native-cli
        - yarn global add detox-cli
        - yarn
        - detox build --configuration ios.sim.release
        - xcrun simctl shutdown all
        - detox test --configuration ios.sim.release --cleanup --take-screenshots all

    - stage: "build test for new project"
      language: android
      jdk: oraclejdk8
      android: *android
      before_cache:
        - rm ~/.gradle/caches/modules-2/modules-2.lock
      cache: *android-cache
      script:
        - *init-new-project
        - react-native link
        - cd android
        - ./gradlew build
        - ls -lh app/build/outputs/apk

    - stage: "build test for new project"
      language: objective-c
      osx_image: xcode10.1
      cache: *ios-cache
      script:
        - brew install yarn
        - *init-new-project
        - react-native link
        - cd ios
        - xcodebuild -project App.xcodeproj -configuration Debug -scheme App -sdk iphonesimulator -quiet

    - stage: "build test for new project with pods"
      language: objective-c
      osx_image: xcode10.1
      cache: *ios-cache
      script:
        - brew install yarn
        - *init-new-project
        - cd ios
        - |
          cat << EOF > Podfile
            platform :ios, '9.0'
            target 'App' do
              # Your 'node_modules' directory is probably in the root of your project,
              # but if not, adjust the `:path` accordingly
              pod 'React', :path => '../node_modules/react-native', :subspecs => [
                'Core',
                'CxxBridge', # Include this for RN >= 0.47
                'DevSupport', # Include this to enable In-App Devmenu if RN >= 0.43
                'RCTText',
                'RCTImage',
                'RCTNetwork',
                'RCTWebSocket', # Needed for debugging
                'RCTAnimation', # Needed for FlatList and animations running on native UI thread
                # Add any other subspecs you want to use in your project
              ]
              # Explicitly include Yoga if you are using RN >= 0.42.0
              pod 'yoga', :path => '../node_modules/react-native/ReactCommon/yoga'

              # Third party deps podspec link
              pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
              pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
              pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'

              pod 'RNSVG', :path => '../node_modules/react-native-svg'
            end
          EOF
        - pod install --repo-update
        - xcodebuild -workspace App.xcworkspace -scheme App -sdk iphonesimulator -quiet

stages:
  - "test js"
  - "build test for example"
  - "build test for new project"
  - "build test for new project with pods"
